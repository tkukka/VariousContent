<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
    	
    <storageModule moduleId="org.eclipse.cdt.core.settings">
        		
        <cconfiguration id="cdt.managedbuild.config.llvm.clang.win32.mingw.exe.debug.448500048">
            			
            <storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.llvm.clang.win32.mingw.exe.debug.448500048" moduleId="org.eclipse.cdt.core.settings" name="Debug">
                				
                <externalSettings/>
                				
                <extensions>
                    					
                    <extension id="org.eclipse.cdt.core.PE64" point="org.eclipse.cdt.core.BinaryParser"/>
                    					
                    <extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
                    					
                    <extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
                    					
                    <extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
                    				
                </extensions>
                			
            </storageModule>
            			
            <storageModule moduleId="cdtBuildSystem" version="4.0.0">
                				
                <configuration artifactExtension="exe" artifactName="KingsPath" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.llvm.clang.win32.mingw.exe.debug.448500048" name="Debug" optionalBuildProperties="org.eclipse.cdt.docker.launcher.containerbuild.property.selectedvolumes=,org.eclipse.cdt.docker.launcher.containerbuild.property.volumes=" parent="cdt.managedbuild.config.llvm.clang.win32.mingw.exe.debug">
                    					
                    <folderInfo id="cdt.managedbuild.config.llvm.clang.win32.mingw.exe.debug.448500048." name="/" resourcePath="">
                        						
                        <toolChain id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.exe.debug.46777311" name="LLVM with Clang (Windows) (MinGW) " superClass="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.exe.debug">
                            							
                            <targetPlatform archList="all" id="cdt.managedbuild.target.llvm.clang.win32.mingw.platform.exe.debug.279507899" name="Debug Platform" osList="win32" superClass="cdt.managedbuild.target.llvm.clang.win32.mingw.platform.exe.debug"/>
                            							
                            <builder buildPath="${workspace_loc:/KingsPath_EclipseCDT_Windows}/Debug" id="cdt.managedbuild.target.llvm.clang.win32.mingw.builder.exe.debug.913875101" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CDT Internal Builder" superClass="cdt.managedbuild.target.llvm.clang.win32.mingw.builder.exe.debug"/>
                            							
                            <tool id="cdt.managedbuild.tool.llvm.clang.win32.mingw.assembler.exe.debug.229457090" name="LLVM assembler" superClass="cdt.managedbuild.tool.llvm.clang.win32.mingw.assembler.exe.debug"/>
                            							
                            <tool id="cdt.managedbuild.tool.llvm.archiver.base.585433297" name="LLVM archiver" superClass="cdt.managedbuild.tool.llvm.archiver.base"/>
                            							
                            <tool id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.compiler.exe.debug.1889577537" name="LLVM Clang" superClass="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.compiler.exe.debug">
                                								
                                <option id="llvm.c_cpp.compiler.option.optimization.level.43263889" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
                                								
                                <option id="llvm.c_cpp.compiler.option.debugging.level.212321920" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
                                								
                                <option id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std.1032443630" name="Language standard" superClass="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.c.compiler.dialect.c11" valueType="enumerated"/>
                                								
                                <option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.preprocessor.def.2050795232" name="Defined symbols (-D)" superClass="llvm.c_cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
                                    									
                                    <listOptionValue builtIn="false" value="DEBUG"/>
                                    									
                                    <listOptionValue builtIn="false" value="_DEBUG"/>
                                    								
                                </option>
                                								
                                <option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.preprocessor.undef.1698270976" name="Undefined symbols (-U)" superClass="llvm.c_cpp.compiler.option.preprocessor.undef" useByScannerDiscovery="false" valueType="undefDefinedSymbols">
                                    									
                                    <listOptionValue builtIn="false" value="NDEBUG"/>
                                    									
                                    <listOptionValue builtIn="false" value="_NDEBUG"/>
                                    								
                                </option>
                                								
                                <option id="llvm.c_cpp.compiler.option.debugging.other.1995312624" name="Other debugging flags" superClass="llvm.c_cpp.compiler.option.debugging.other" useByScannerDiscovery="false" value="-glldb -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer" valueType="string"/>
                                								
                                <inputType id="cdt.managedbuild.tool.llvm.c.compiler.input.2075126404" superClass="cdt.managedbuild.tool.llvm.c.compiler.input"/>
                                							
                            </tool>
                            							
                            <tool id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.compiler.exe.debug.658694225" name="LLVM Clang++" superClass="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.compiler.exe.debug">
                                								
                                <option id="llvm.c_cpp.compiler.option.optimization.level.1231020592" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
                                								
                                <option id="llvm.c_cpp.compiler.option.debugging.level.1283660016" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
                                								
                                <option id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std.551108187" name="Language standard" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.cpp.compiler.dialect.default" valueType="enumerated"/>
                                								
                                <option id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.flags.1624127799" name="Other dialect flags" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.flags" useByScannerDiscovery="true" value="-std=c++17" valueType="string"/>
                                								
                                <option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.preprocessor.def.1961282207" name="Defined symbols (-D)" superClass="llvm.c_cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
                                    									
                                    <listOptionValue builtIn="false" value="DEBUG"/>
                                    									
                                    <listOptionValue builtIn="false" value="_DEBUG"/>
                                    								
                                </option>
                                								
                                <option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.preprocessor.undef.101868281" name="Undefined symbols (-U)" superClass="llvm.c_cpp.compiler.option.preprocessor.undef" useByScannerDiscovery="false" valueType="undefDefinedSymbols">
                                    									
                                    <listOptionValue builtIn="false" value="NDEBUG"/>
                                    									
                                    <listOptionValue builtIn="false" value="_NDEBUG"/>
                                    								
                                </option>
                                								
                                <option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.include.paths.1849608716" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
                                    									
                                    <listOptionValue builtIn="false" value="&quot;C:\workspace\github\llvm-project\libcxx\include&quot;"/>
                                    								
                                </option>
                                								
                                <option id="llvm.c_cpp.compiler.option.warnings.pedantic.1080800299" name="Pedantic (-pedantic)" superClass="llvm.c_cpp.compiler.option.warnings.pedantic" useByScannerDiscovery="false" value="true" valueType="boolean"/>
                                								
                                <option id="llvm.c_cpp.compiler.option.misc.other.1514018910" name="Other flags" superClass="llvm.c_cpp.compiler.option.misc.other" useByScannerDiscovery="false" value="-c -fmessage-length=0 -Wextra -Wformat-security -Werror=format-security" valueType="string"/>
                                								
                                <option id="llvm.c_cpp.compiler.option.debugging.other.1396769204" name="Other debugging flags" superClass="llvm.c_cpp.compiler.option.debugging.other" useByScannerDiscovery="false" value="-glldb -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer" valueType="string"/>
                                								
                                <option id="llvm.c_cpp.compiler.option.optimization.flags.594327037" name="Other optimization flags" superClass="llvm.c_cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="-emit-llvm -m64" valueType="string"/>
                                								
                                <inputType id="cdt.managedbuild.tool.llvm.cpp.compiler.input.706194736" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.input"/>
                                							
                            </tool>
                            							
                            <tool id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.linker.exe.debug.308381912" name="LLVM Clang C linker" superClass="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.linker.exe.debug">
                                								
                                <option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.2026959839" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
                                							
                            </tool>
                            							
                            <tool id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.linker.exe.debug.395753129" name="LLVM Clang C++ linker" superClass="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.linker.exe.debug">
                                								
                                <option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.439753075" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" useByScannerDiscovery="false" valueType="boolean"/>
                                								
                                <option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c.link.option.paths.1181591059" name="Library search path (-L)" superClass="llvm.c.link.option.paths" useByScannerDiscovery="false" valueType="libPaths">
                                    									
                                    <listOptionValue builtIn="false" value="&quot;C:\workspace\github\llvm-project\build\lib\Debug&quot;"/>
                                    									
                                    <listOptionValue builtIn="false" value="C:\LLVM-9\lib"/>
                                    								
                                </option>
                                								
                                <option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c.link.option.libs.1940870841" name="Libraries (-l)" superClass="llvm.c.link.option.libs" useByScannerDiscovery="false" valueType="libs">
                                    									
                                    <listOptionValue builtIn="false" value="c++"/>
                                    								
                                </option>
                                								
                                <option id="llvm.c.link.base.option.ldflags.863580280" name="Linker flags" superClass="llvm.c.link.base.option.ldflags" useByScannerDiscovery="false" value=" -Wl,/subsystem:console,/machine:x64,/debug:full -fuse-ld=lld " valueType="string"/>
                                								
                                <inputType id="cdt.managedbuild.tool.llvm.c.linker.input.344028238" superClass="cdt.managedbuild.tool.llvm.c.linker.input">
                                    									
                                    <additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
                                    									
                                    <additionalInput kind="additionalinput" paths="$(LIBS)"/>
                                    								
                                </inputType>
                                							
                            </tool>
                            						
                        </toolChain>
                        					
                    </folderInfo>
                    				
                </configuration>
                			
            </storageModule>
            			
            <storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
            		
        </cconfiguration>
        		
        <cconfiguration id="cdt.managedbuild.config.llvm.clang.win32.mingw..exe.release.969735344">
            			
            <storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.llvm.clang.win32.mingw..exe.release.969735344" moduleId="org.eclipse.cdt.core.settings" name="Release">
                				
                <externalSettings/>
                				
                <extensions>
                    					
                    <extension id="org.eclipse.cdt.core.PE64" point="org.eclipse.cdt.core.BinaryParser"/>
                    					
                    <extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
                    					
                    <extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
                    					
                    <extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
                    				
                </extensions>
                			
            </storageModule>
            			
            <storageModule moduleId="cdtBuildSystem" version="4.0.0">
                				
                <configuration artifactExtension="exe" artifactName="KingsPath" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.llvm.clang.win32.mingw..exe.release.969735344" name="Release" optionalBuildProperties="org.eclipse.cdt.docker.launcher.containerbuild.property.selectedvolumes=,org.eclipse.cdt.docker.launcher.containerbuild.property.volumes=" parent="cdt.managedbuild.config.llvm.clang.win32.mingw..exe.release">
                    					
                    <folderInfo id="cdt.managedbuild.config.llvm.clang.win32.mingw..exe.release.969735344." name="/" resourcePath="">
                        						
                        <toolChain id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.exe.release.2002971978" name="LLVM with Clang (Windows) (MinGW) " superClass="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.exe.release">
                            							
                            <targetPlatform archList="all" id="cdt.managedbuild.target.llvm.clang.win32.mingw.platform.exe.release.1045169662" name="Debug Platform" osList="win32" superClass="cdt.managedbuild.target.llvm.clang.win32.mingw.platform.exe.release"/>
                            							
                            <builder buildPath="${workspace_loc:/KingsPath_EclipseCDT_Windows}/Release" id="cdt.managedbuild.target.llvm.clang.win32.mingw.builder.exe.release.1375795150" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CDT Internal Builder" superClass="cdt.managedbuild.target.llvm.clang.win32.mingw.builder.exe.release"/>
                            							
                            <tool id="cdt.managedbuild.tool.llvm.clang.win32.mingw.assembler.exe.release.1749824476" name="LLVM assembler" superClass="cdt.managedbuild.tool.llvm.clang.win32.mingw.assembler.exe.release"/>
                            							
                            <tool id="cdt.managedbuild.tool.llvm.archiver.base.903365158" name="LLVM archiver" superClass="cdt.managedbuild.tool.llvm.archiver.base"/>
                            							
                            <tool id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.compiler.exe.release.1061159796" name="LLVM Clang" superClass="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.compiler.exe.release">
                                								
                                <option id="llvm.c_cpp.compiler.option.optimization.level.154964915" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.most" valueType="enumerated"/>
                                								
                                <option id="llvm.c_cpp.compiler.option.debugging.level.751447143" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.none" valueType="enumerated"/>
                                								
                                <option id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std.1313800011" name="Language standard" superClass="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.c.compiler.dialect.c11" valueType="enumerated"/>
                                								
                                <option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.preprocessor.def.1385773965" name="Defined symbols (-D)" superClass="llvm.c_cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
                                    									
                                    <listOptionValue builtIn="false" value="NDEBUG"/>
                                    									
                                    <listOptionValue builtIn="false" value="_NDEBUG"/>
                                    								
                                </option>
                                								
                                <option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.preprocessor.undef.1667490200" name="Undefined symbols (-U)" superClass="llvm.c_cpp.compiler.option.preprocessor.undef" useByScannerDiscovery="false" valueType="undefDefinedSymbols">
                                    									
                                    <listOptionValue builtIn="false" value="DEBUG"/>
                                    									
                                    <listOptionValue builtIn="false" value="_DEBUG"/>
                                    								
                                </option>
                                								
                                <option id="llvm.c_cpp.compiler.option.warnings.pedantic.176136155" name="Pedantic (-pedantic)" superClass="llvm.c_cpp.compiler.option.warnings.pedantic" useByScannerDiscovery="false" value="true" valueType="boolean"/>
                                								
                                <option id="llvm.c_cpp.compiler.option.optimization.flags.513043701" name="Other optimization flags" superClass="llvm.c_cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="-emit-llvm -march=native" valueType="string"/>
                                								
                                <option id="llvm.c_cpp.compiler.option.misc.other.1937485179" name="Other flags" superClass="llvm.c_cpp.compiler.option.misc.other" useByScannerDiscovery="false" value="-c -fmessage-length=0 -Wextra -Wformat-security -Werror=format-security -flto -fvisibility=hidden -fstack-protector-strong" valueType="string"/>
                                								
                                <inputType id="cdt.managedbuild.tool.llvm.c.compiler.input.1273456397" superClass="cdt.managedbuild.tool.llvm.c.compiler.input"/>
                                							
                            </tool>
                            							
                            <tool id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.compiler.exe.release.1110295903" name="LLVM Clang++" superClass="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.compiler.exe.release">
                                								
                                <option id="llvm.c_cpp.compiler.option.optimization.level.1193418126" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.most" valueType="enumerated"/>
                                								
                                <option id="llvm.c_cpp.compiler.option.debugging.level.1330964668" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.none" valueType="enumerated"/>
                                								
                                <option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.include.paths.239000935" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
                                    									
                                    <listOptionValue builtIn="false" value="&quot;C:\workspace\github\llvm-project\libcxx\include&quot;"/>
                                    								
                                </option>
                                								
                                <option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.preprocessor.def.562384979" name="Defined symbols (-D)" superClass="llvm.c_cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
                                    									
                                    <listOptionValue builtIn="false" value="NDEBUG"/>
                                    									
                                    <listOptionValue builtIn="false" value="_NDEBUG"/>
                                    								
                                </option>
                                								
                                <option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.preprocessor.undef.1971037377" name="Undefined symbols (-U)" superClass="llvm.c_cpp.compiler.option.preprocessor.undef" useByScannerDiscovery="false" valueType="undefDefinedSymbols">
                                    									
                                    <listOptionValue builtIn="false" value="DEBUG"/>
                                    									
                                    <listOptionValue builtIn="false" value="_DEBUG"/>
                                    								
                                </option>
                                								
                                <option id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std.24167046" name="Language standard" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.cpp.compiler.dialect.default" valueType="enumerated"/>
                                								
                                <option id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.flags.1098743077" name="Other dialect flags" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.flags" useByScannerDiscovery="true" value="-std=c++17" valueType="string"/>
                                								
                                <option id="llvm.c_cpp.compiler.option.warnings.pedantic.732337322" name="Pedantic (-pedantic)" superClass="llvm.c_cpp.compiler.option.warnings.pedantic" useByScannerDiscovery="false" value="true" valueType="boolean"/>
                                								
                                <option id="llvm.c_cpp.compiler.option.misc.other.1705776928" name="Other flags" superClass="llvm.c_cpp.compiler.option.misc.other" useByScannerDiscovery="false" value="-c -fmessage-length=0 -Wextra -Wformat-security -Werror=format-security -flto -fvisibility=hidden -fstack-protector-strong" valueType="string"/>
                                								
                                <option id="llvm.c_cpp.compiler.option.optimization.flags.1303158063" name="Other optimization flags" superClass="llvm.c_cpp.compiler.option.optimization.flags" useByScannerDiscovery="false" value="-emit-llvm -m64 -march=native" valueType="string"/>
                                								
                                <inputType id="cdt.managedbuild.tool.llvm.cpp.compiler.input.1083980795" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.input"/>
                                							
                            </tool>
                            							
                            <tool id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.linker.exe.release.609061977" name="LLVM Clang C linker" superClass="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.linker.exe.release">
                                								
                                <option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.246894565" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
                                							
                            </tool>
                            							
                            <tool id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.linker.exe.release.646373629" name="LLVM Clang C++ linker" superClass="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.linker.exe.release">
                                								
                                <option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.1523447745" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" useByScannerDiscovery="false" valueType="boolean"/>
                                								
                                <option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c.link.option.paths.1845534621" name="Library search path (-L)" superClass="llvm.c.link.option.paths" useByScannerDiscovery="false" valueType="libPaths">
                                    									
                                    <listOptionValue builtIn="false" value="C:\workspace\github\llvm-project\build\lib\Release"/>
                                    									
                                    <listOptionValue builtIn="false" value="C:\LLVM-9\lib"/>
                                    								
                                </option>
                                								
                                <option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c.link.option.libs.1164237276" name="Libraries (-l)" superClass="llvm.c.link.option.libs" useByScannerDiscovery="false" valueType="libs">
                                    									
                                    <listOptionValue builtIn="false" value="c++"/>
                                    								
                                </option>
                                								
                                <option id="llvm.c.link.base.option.ldflags.208387170" name="Linker flags" superClass="llvm.c.link.base.option.ldflags" useByScannerDiscovery="false" value="-Wl,/subsystem:console,/machine:x64  -fuse-ld=lld" valueType="string"/>
                                								
                                <option id="llvm.c.link.option.strip.964217711" name="Omit all debug information (-strip-debug)" superClass="llvm.c.link.option.strip" useByScannerDiscovery="false" value="false" valueType="boolean"/>
                                								
                                <inputType id="cdt.managedbuild.tool.llvm.c.linker.input.1663344537" superClass="cdt.managedbuild.tool.llvm.c.linker.input">
                                    									
                                    <additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
                                    									
                                    <additionalInput kind="additionalinput" paths="$(LIBS)"/>
                                    								
                                </inputType>
                                							
                            </tool>
                            						
                        </toolChain>
                        					
                    </folderInfo>
                    				
                </configuration>
                			
            </storageModule>
            			
            <storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
            		
        </cconfiguration>
        	
    </storageModule>
    	
    <storageModule moduleId="cdtBuildSystem" version="4.0.0">
        		
        <project id="KingsPath_EclipseCDT_Windows.cdt.managedbuild.target.llvm.clang.win32.mingw.exe.1256791987" name="Executable" projectType="cdt.managedbuild.target.llvm.clang.win32.mingw.exe"/>
        	
    </storageModule>
    	
    <storageModule moduleId="scannerConfiguration">
        		
        <autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
        	
    </storageModule>
    	
    <storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
    	
    <storageModule moduleId="refreshScope" versionNumber="2">
        		
        <configuration configurationName="Debug">
            			
            <resource resourceType="PROJECT" workspacePath="/KingsPath_EclipseCDT_Windows"/>
            		
        </configuration>
        		
        <configuration configurationName="Release">
            			
            <resource resourceType="PROJECT" workspacePath="/KingsPath_EclipseCDT_Windows"/>
            		
        </configuration>
        	
    </storageModule>
    	
    <storageModule moduleId="org.eclipse.cdt.make.core.buildtargets"/>
    	
    <storageModule moduleId="org.eclipse.cdt.internal.ui.text.commentOwnerProjectMappings"/>
    
</cproject>
